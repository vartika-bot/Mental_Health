{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mansi kamble\\\\Desktop\\\\homepage_webd\\\\home_create\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Ensure Bootstrap is imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const validateField = (name, value) => {\n    let error = '';\n    if (!value) {\n      error = 'This field is required.';\n    } else {\n      switch (name) {\n        case 'email':\n          // Basic email format validation\n          const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n          if (!emailPattern.test(value)) {\n            error = 'Please enter a valid email address.';\n          }\n          break;\n        case 'password':\n          // Password complexity validation\n          const passwordComplexity = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*(),.?\":{}|<>]).{8,}$/;\n          if (!passwordComplexity.test(value)) {\n            error = 'Password must be at least 8 characters long and include an uppercase letter, a lowercase letter, a number, and a special character.';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n    return error;\n  };\n  const handleBlur = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setErrors({\n      ...errors,\n      [name]: validateField(name, value)\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    let isValid = true;\n    const newErrors = {};\n\n    // Validate each field\n    for (const [key, value] of Object.entries(formData)) {\n      const error = validateField(key, value);\n      if (error) {\n        newErrors[key] = error;\n        isValid = false;\n      }\n    }\n    setErrors(newErrors);\n    if (isValid) {\n      alert('Account Login Successful!');\n      // You can handle the form submission logic here (e.g., API call)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"w-50 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loginEmail\",\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n          id: \"loginEmail\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          required: true,\n          style: {\n            maxWidth: '400px',\n            margin: '0 auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loginPassword\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n          id: \"loginPassword\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          required: true,\n          style: {\n            maxWidth: '400px',\n            margin: '0 auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary w-100\",\n        disabled: Object.values(errors).some(error => error),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"A1d/0W8jFO3pNvx0n8uy7alGf1Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","errors","setErrors","handleChange","e","name","value","target","validateField","error","emailPattern","test","passwordComplexity","handleBlur","handleSubmit","preventDefault","isValid","newErrors","key","Object","entries","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","onBlur","required","style","maxWidth","margin","disabled","values","some","_c","$RefreshReg$"],"sources":["C:/Users/mansi kamble/Desktop/homepage_webd/home_create/src/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Ensure Bootstrap is imported\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const validateField = (name, value) => {\r\n    let error = '';\r\n    if (!value) {\r\n      error = 'This field is required.';\r\n    } else {\r\n      switch (name) {\r\n        case 'email':\r\n          // Basic email format validation\r\n          const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n          if (!emailPattern.test(value)) {\r\n            error = 'Please enter a valid email address.';\r\n          }\r\n          break;\r\n        case 'password':\r\n          // Password complexity validation\r\n          const passwordComplexity = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*(),.?\":{}|<>]).{8,}$/;\r\n          if (!passwordComplexity.test(value)) {\r\n            error = 'Password must be at least 8 characters long and include an uppercase letter, a lowercase letter, a number, and a special character.';\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    return error;\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    const { name, value } = e.target;\r\n    setErrors({ ...errors, [name]: validateField(name, value) });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    // Validate each field\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      const error = validateField(key, value);\r\n      if (error) {\r\n        newErrors[key] = error;\r\n        isValid = false;\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    \r\n    if (isValid) {\r\n      alert('Account Login Successful!');\r\n      // You can handle the form submission logic here (e.g., API call)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center mb-4\">Login</h2>\r\n      <form onSubmit={handleSubmit} className=\"w-50 mx-auto\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"loginEmail\" className=\"form-label\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n            id=\"loginEmail\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            required\r\n            style={{ maxWidth: '400px', margin: '0 auto' }}\r\n          />\r\n          {errors.email && <div className=\"invalid-feedback\">{errors.email}</div>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"loginPassword\" className=\"form-label\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n            id=\"loginPassword\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            required\r\n            style={{ maxWidth: '400px', margin: '0 auto' }}\r\n          />\r\n          {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={Object.values(errors).some((error) => error)}>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}